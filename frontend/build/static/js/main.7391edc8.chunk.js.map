{"version":3,"sources":["redux/constants/authConstants.js","redux/actions/authActions.js","components/Navbarcomp.js","components/Product.js","redux/constants/productConstants.js","Screens/HomeScreen.js","redux/actions/productActions.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","Screens/ProductScreen.js","components/CartItem.js","Screens/CartScreen.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/routesp/privateroutes.js","App.js","reportWebVitals.js","redux/reducers/messageReducer.js","redux/reducers/authReducer.js","redux/store.js","redux/reducers/cartReducers.js","redux/reducers/productReducers.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","config","header","register","email","firstname","lastname","password","dispatch","getState","a","type","actionTypes","payload","axios","post","catch","error","data","token","localStorage","setItem","JSON","stringify","getuser","console","log","message","response","toString","login","logout","Navbarcomp","click","useDispatch","user","useSelector","state","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Form","FormControl","placeholder","aria-label","Button","NavDropdown","title","isLoggedIn","Item","Divider","onClick","Product","imageUrl","description","price","name","productId","src","alt","substring","to","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","getProducts","products","loading","getItem","useEffect","get","map","product","_id","GET_CART_REQUEST","GET_CART_SUCCESS","GET_CART_FAIL","getCart","headers","parse","status","ProductScreen","match","history","useState","qty","setQty","productDetails","getProductDetails","params","countInStock","value","onChange","e","target","Array","keys","x","productid","addToCart","push","CartItem","item","qtyChangeHandler","imageurl","cis","CartScreen","getcart","cartItems","cartitemid","updateCart","removeFromCartHandler","length","removeHandler","reduce","Number","toFixed","LoginScreen","setEmail","setPassword","getmessage","loginHandler","preventDefault","Alert","onSubmit","Group","controlId","Label","Control","Text","RegisterScreen","setfirstname","setlastname","registerhandler","required","PrivateRoute","Component","component","rest","render","props","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","middleware","thunk","INITIAL_STATE","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7391edc8.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","import * as actionTypes from \"../constants/authConstants\";\r\n\r\nimport axios from \"axios\";\r\nconst config = {\r\n  header: {\r\n      \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n  \r\nexport const register =  (email,firstname,lastname, password) => async  (dispatch,getState) => {\r\n  try{\r\n      dispatch({\r\n          type: actionTypes.SET_MESSAGE,\r\n          payload: \"Creating profile\"\r\n      })\r\n      const {data} = await axios.post('api/auth/register',{firstname,lastname,email,password},config).catch((error)=>{throw(error);});\r\n      dispatch({\r\n        type: actionTypes.REGISTER_SUCCESS,\r\n      });\r\n      dispatch({\r\n          type:actionTypes.LOGIN_SUCCESS,\r\n          payload: {\r\n              firstname: data.firstname,\r\n              lastname: data.lastname,\r\n              email: data.email,\r\n              token: data.token,\r\n          }\r\n      })\r\n      dispatch({\r\n        type: actionTypes.SET_MESSAGE,\r\n        payload: \"Logged In\",\r\n      });    \r\n\r\n      localStorage.setItem(\"user\",JSON.stringify(getState().getuser));   \r\n  }\r\n  catch (error){\r\n    console.log(error);\r\n      const message =\r\n        (error.response && error.response.data && error.response.data.message) ||error.message ||error.toString();\r\n\r\n      dispatch({\r\n        type: actionTypes.REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n  }\r\n};\r\n  \r\nexport const login = (email, password) => async (dispatch,getState) => {\r\n  try{\r\n      dispatch({\r\n          type: actionTypes.SET_MESSAGE,\r\n          payload: \"Logging in\",\r\n      });\r\n      const {data} = await axios.post('api/auth/login',{email,password},config).catch((error)=>{throw(error);});\r\n      dispatch({\r\n          type: actionTypes.LOGIN_SUCCESS,\r\n          payload: {\r\n              firstname: data.firstname,\r\n              lastname: data.lastname,\r\n              email: data.email,\r\n              token: data.token,\r\n          }\r\n      });    \r\n      dispatch({\r\n        type: actionTypes.SET_MESSAGE,\r\n        payload: \"Logged In\",\r\n      });\r\n      localStorage.setItem(\"user\",JSON.stringify(getState().getuser)); \r\n  }\r\n  catch (error) {\r\n      const message =(error.response && error.response.data && error.response.data.message) ||error.message ||error.toString();\r\n\r\n      dispatch({\r\n        type: actionTypes.LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const logout = () =>async (dispatch,getState) => {\r\n  dispatch({\r\n    type: actionTypes.LOGOUT,\r\n  });\r\n  localStorage.setItem(\"user\",JSON.stringify(getState().getuser)); \r\n};","import {Navbar,Nav,NavDropdown,Form,FormControl,Button} from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {logout} from '../redux/actions/authActions';\r\n\r\nconst Navbarcomp = ({ click }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state)=> state.getuser);\r\n  console.log(user);\r\n  const Logout =()=>{\r\n    dispatch(logout());\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n    \r\n    <Navbar.Brand href=\"/\" >Shopify</Navbar.Brand>\r\n    \r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n      </Nav>\r\n      <Nav>\r\n        <Form className=\"d-flex\">\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className=\"mr-2\"\r\n          aria-label=\"Search\"\r\n        />\r\n        <Button variant=\"outline-success\">Search</Button>\r\n        <NavDropdown title={(user.isLoggedIn)?(<> {user.user.firstname+\" \"+user.user.lastname}</>):(<>Log In</>)} id=\"collasible-nav-dropdown\">{\r\n          (!user.isLoggedIn)?(\r\n          <>\r\n          <NavDropdown.Item href=\"cart\">Login</NavDropdown.Item>\r\n          </>\r\n          ):(\r\n          <>\r\n          <NavDropdown.Item href=\"cart\">Cart</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={Logout}>Log Out</NavDropdown.Item>\r\n          </>\r\n          )\r\n        }\r\n        </NavDropdown>\r\n      </Form>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n    //  <nav className=\"navbar\">\r\n    //   <div className=\"navbar__logo\">\r\n    //     <h2>MERN Shopping Cart</h2>\r\n    //   </div>\r\n\r\n    //   <ul className=\"navbar__links\">\r\n    //     <li>\r\n    //       <Link to=\"/cart\" className=\"cart__link\">\r\n    //         <i className=\"fas fa-shopping-cart\"></i>\r\n    //         <span>\r\n    //           Cart <span className=\"cartlogo__badge\">{getCartCount()}</span>\r\n    //         </span>\r\n    //       </Link>\r\n    //     </li>\r\n    //     <li>\r\n    //       <Link to=\"/\">Shop</Link>\r\n    //     </li>\r\n    //   </ul>\r\n\r\n    //   <div className=\"hamburger__menu\" onClick={click}>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    //   </div>\r\n    // </nav> \r\n  );\r\n};\r\n\r\nexport default Navbarcomp;\r\n","import \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ imageUrl, description, price, name, productId }) => {\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={imageUrl} alt={name} />\r\n\r\n      <div className=\"product__info\">\r\n        <p className=\"info__name\">{name}</p>\r\n\r\n        <p className=\"info__description\">{description.substring(0, 100)}...</p>\r\n\r\n        <p className=\"info__price\">${price}</p>\r\n\r\n        <Link to={`/product/${productId}`} className=\"info__button\">\r\n          View\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import \"./HomeScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport Product from \"../components/Product\";\r\n\r\n//Actions\r\nimport { getProducts as listProducts } from \"../redux/actions/productActions\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getProducts = useSelector((state) => state.getProducts);\r\n  console.log(getProducts);\r\n  const { products, loading, error } = getProducts;\r\n  const user = localStorage.getItem('user');\r\n  console.log(user);\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"homescreen\">\r\n      <h2 className=\"homescreen__title\">Latest Products</h2>\r\n      <div className=\"homescreen__products\">\r\n        {loading ? (\r\n          <h2>Loading...</h2>\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          products.map((product) => (\r\n            <Product\r\n              key={product._id}\r\n              name={product.name}\r\n              description={product.description}\r\n              price={product.price}\r\n              imageUrl={product.imageUrl}\r\n              productId={product._id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import * as actionTypes from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\r\n};\r\n","export const GET_CART_REQUEST =\"GET_CART\";\r\nexport const GET_CART_SUCCESS =\"GET_CART_SUCCESS\";\r\nexport const GET_CART_FAIL =\"GET_CART_FAIL\";\r\nexport const GET_CART_RESET = \"GET_CART_RESET\";\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\nimport {logout} from '../actions/authActions';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getCart=()=>async(dispatch,getState)=>{\r\n  const config ={\r\n    headers:{\r\n      'Content-Type': 'application/json',\r\n      'token': JSON.parse(localStorage.getItem(\"user\")).user.token,\r\n    }\r\n  }\r\n  try {\r\n    dispatch({type:actionTypes.GET_CART_REQUEST});\r\n    const {data} = await axios.post('/api/private/cart',{},config).catch((error)=>{if(error.response.status===401){\r\n      dispatch(logout());\r\n    }\r\n    throw(error);});\r\n    dispatch({type:actionTypes.GET_CART_SUCCESS,payload:data});\r\n  } catch (error) {\r\n    dispatch({\r\n      type:actionTypes.GET_CART_FAIL,\r\n      payload:(error.response && error.response.data && error.response.data.message) ||error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const config ={\r\n    headers:{\r\n      'Content-Type': 'application/json',\r\n      'token': getState().getuser.user.token,\r\n    }\r\n  }\r\n  try {\r\n    await axios.post('/api/private/cart/add',{productid:id,qty},config).catch((error)=>{\r\n      if(error.response.status===401){\r\n        dispatch(logout());\r\n      }\r\n      throw(error);});\r\n      dispatch(getCart());\r\n  } catch (error) {\r\n    dispatch({\r\n      type:actionTypes.GET_CART_FAIL,\r\n      payload:(error.response && error.response.data && error.response.data.message) ||error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCart = (id,qty) => async (dispatch, getState) => {\r\n  const config ={\r\n    headers:{\r\n      'Content-Type': 'application/json',\r\n      'token': JSON.parse(localStorage.getItem(\"user\")).user.token,\r\n    }\r\n  }\r\n  try {\r\n    await axios.post('/api/private/cart/update',{cartitemid:id,qty:qty},config).catch((error)=>{if(error.response.status===401){\r\n      dispatch(logout());\r\n    }\r\n    throw(error);});\r\n    dispatch(getCart());\r\n  } catch (error) {\r\n    dispatch({\r\n      type:actionTypes.GET_CART_FAIL,\r\n      payload:(error.response && error.response.data && error.response.data.message) ||error.message,\r\n    });\r\n  }\r\n  \r\n};\r\n","import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/actions/productActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.getProductDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, qty));\r\n    console.log('added');\r\n    history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productscreen\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{error}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"productscreen__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">PlayStation 5</p>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"productscreen__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Price:\r\n                <span>${product.price}</span>\r\n              </p>\r\n              <p>\r\n                Status:\r\n                <span>\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Qty\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Add To Cart\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, qtyChangeHandler}) => {\r\n  return (\r\n    <div className=\"cartitem\">\r\n      <div className=\"cartitem__image\">\r\n        <img src={item.imageurl} alt={item.name} />\r\n      </div>\r\n      <Link to={`/product/${item.product}`} className=\"cartItem__name\">\r\n        <p>{item.name}</p>\r\n      </Link>\r\n      <p className=\"cartitem__price\">${item.price}</p>\r\n      <select\r\n        value={item.qty}\r\n        onChange={(e) => qtyChangeHandler(item.id, e.target.value)}\r\n        className=\"cartItem__select\"\r\n      >\r\n        {[...Array(item.cis).keys()].map((x) => (\r\n          <option key={x + 1} value={x + 1}>\r\n            {x + 1}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"cartItem__deleteBtn\"\r\n        onClick={() => qtyChangeHandler(item.id,0)}\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import \"./CartScreen.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useEffect} from 'react';\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\n\r\n// Actions\r\nimport { getCart,updateCart } from \"../redux/actions/cartActions\";\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getcart = useSelector((state) => state.getcart);\r\n  console.log(getcart);\r\n  var { cartItems } = getcart;\r\n  console.log(cartItems);\r\n  useEffect(()=>{\r\n    dispatch(getCart());\r\n  },[dispatch]);\r\n\r\n  const qtyChangeHandler = (id, qty) => {\r\n    dispatch(updateCart(id, qty));\r\n  };\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(qtyChangeHandler(id,0));\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  const getCartSubTotal = () => {\r\n    return cartItems\r\n      .reduce((price, item) => price + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cartscreen\">\r\n        <div className=\"cartscreen__left\">\r\n          <h2>Shopping Cart</h2>\r\n\r\n          {cartItems.length === 0 ? (\r\n            <div>\r\n              Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n            </div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <CartItem\r\n                key={item.id}\r\n                item={item}\r\n                qtyChangeHandler={qtyChangeHandler}\r\n                removeHandler={removeFromCartHandler}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"cartscreen__right\">\r\n          <div className=\"cartscreen__info\">\r\n            <p>Subtotal ({getCartCount()}) items</p>\r\n            <p>${getCartSubTotal()}</p>\r\n          </div>\r\n          <div>\r\n            <button>Proceed To Checkout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import {useDispatch,useSelector} from 'react-redux';\r\nimport {useState,useEffect} from 'react';\r\nimport {Form,Button,Alert} from 'react-bootstrap';\r\nimport {login} from '../redux/actions/authActions';\r\nimport * as actionTypes from '../redux/constants/authConstants';\r\n\r\n\r\nconst LoginScreen = ({history}) =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const {message} = useSelector((state)=>state.getmessage); \r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(user&&user.token){\r\n            history.push('/');\r\n            dispatch({type:actionTypes.SET_MESSAGE,payload:\"Already login\"});\r\n        }\r\n    }, [history,dispatch]);\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email,password));\r\n        const user =localStorage.getItem(\"user\");\r\n        if (user&&user.token) {        \r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    return (<>\r\n            {message!==\"\"?(<Alert variant='info'>{message}</Alert>):<div></div>}\r\n            <Form onSubmit={loginHandler}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" value={email} placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {setPassword(e.target.value)}}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import {Form,Alert,Button} from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {register} from '../redux/actions/authActions';\r\nimport * as actionTypes from '../redux/constants/authConstants';\r\n\r\nconst RegisterScreen = ({history})=>{\r\n    const {message} = useSelector(state => state.getmessage);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstname, setfirstname] = useState(\"\");\r\n    const [lastname,setlastname] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    useEffect(()=>{\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(user&&user.token){\r\n            dispatch({type:actionTypes.SET_MESSAGE,payload:\"Logout first\"});\r\n            history.push('/');\r\n        }\r\n    },[history,dispatch]);\r\n\r\n    const registerhandler = async (e)=>{\r\n        e.preventDefault();\r\n        dispatch(register(email,firstname,lastname,password));\r\n    }\r\n    return (<>\r\n        {message!==\"\"?(<Alert variant='info'>{message}</Alert>):<div></div>}\r\n        <Form onSubmit={registerhandler}>\r\n        <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Email address*</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGroupFirstname\">\r\n            <Form.Label>First Name*</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Enter firstname\" value={firstname} onChange={(e)=>setfirstname(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGroupLastname\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter lastname\" value={lastname} onChange={(e)=>setlastname(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Password*</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form>\r\n    </>);\r\n}\r\n\r\nexport default RegisterScreen;","import { Route,Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component,...rest})=>{\r\n    return <Route\r\n        {...rest}\r\n        render={(props)=>\r\n            (localStorage.getItem(\"user\")&&JSON.parse(localStorage.getItem(\"user\")).isLoggedIn)?(\r\n            <Component {...props}/>):(\r\n            <Redirect to =\"/login\"/>\r\n            )\r\n        }\r\n    />\r\n}\r\n\r\nexport default PrivateRoute;","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Navbar from \"./components/Navbarcomp\";\r\n\r\n// Screens\r\nimport HomeScreen from \"./Screens/HomeScreen\";\r\nimport ProductScreen from \"./Screens/ProductScreen\";\r\nimport CartScreen from \"./Screens/CartScreen\";\r\nimport LoginScreen from \"./Screens/LoginScreen\";\r\nimport RegisterScreen from \"./Screens/RegisterScreen\";\r\nimport PrivateRoute from \"./Screens/routesp/privateroutes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar  />\r\n      <main className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/login\"component={LoginScreen}/>\r\n          <Route exact path=\"/register\" component={RegisterScreen}/>\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\r\n          <PrivateRoute exact path=\"/cart\" component={CartScreen} />\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from \"../constants/authConstants\";\r\n\r\nconst initialState = {message:\"\"};\r\n\r\nexport const messageReducer = (state = initialState, action) =>{\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case actionTypes.SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case actionTypes.CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as actionTypes from \"../constants/authConstants\";\r\n  \r\n  const userfromloc = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = userfromloc;\r\n  \r\n  export const authReducer = (state = initialState, action)=> {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case actionTypes.REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case actionTypes.REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case actionTypes.LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload,\r\n        };\r\n      case actionTypes.LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case actionTypes.LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  getProductsReducer,\r\n  getProductDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\nimport {messageReducer} from \"./reducers/messageReducer\";\r\nimport {authReducer} from './reducers/authReducer';\r\n\r\nconst reducer = combineReducers({\r\n  getuser: authReducer,\r\n  getcart: cartReducer,\r\n  getmessage: messageReducer,\r\n  getProducts: getProductsReducer,\r\n  getProductDetails: getProductDetailsReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst user = localStorage.getItem(\"user\")\r\n  ? JSON.parse(localStorage.getItem(\"user\"))\r\n  :{ isLoggedIn: false, user: null } ;\r\n\r\nconst INITIAL_STATE = {\r\n  getuser: user\r\n  ,\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\n\r\n// var CART_INITIAL_STATE = ;\r\n\r\nexport const cartReducer = (state = {cartItems: [],loading:true,message:\"\"}, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CART_REQUEST:\r\n      return {\r\n        ...state,\r\n        message:\"loading\"\r\n      };\r\n    case actionTypes.GET_CART_SUCCESS:\r\n      return{\r\n        ...state,\r\n        loading:false,\r\n        cartItems:action.payload,\r\n        message:\"succes\",\r\n      };\r\n    case actionTypes.GET_CART_FAIL:\r\n      return{\r\n        loading:false,\r\n        cartItems:[],\r\n        message:action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/productConstants\";\r\n\r\nexport const getProductsReducer = (state = { products: [] ,loading:true}, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        products: action.payload,\r\n        loading: false,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n      return {\r\n        product: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}